// src/pages/About.jsx
import { useEffect, useMemo, useState, useId } from "react";
import { Link } from "react-router-dom";
import Faq from "./Faq";

/** ‚Äî‚Äî‚Äî helpers ‚Äî‚Äî‚Äî */
const clamp = (n, min, max) => Math.min(max, Math.max(min, n));
const fmtDate = (d) =>
  new Date(d).toLocaleDateString("uk-UA", { year: "numeric", month: "short", day: "2-digit" });
const AVG = (arr) => (arr.length ? arr.reduce((s, r) => s + r.rating, 0) / arr.length : 0);

/** ‚Äî‚Äî‚Äî demo seed ‚Äî‚Äî‚Äî */
const SEED = [
  {
    id: "r1",
    name: "–û–ª–µ–∫—Å–∞–Ω–¥—Ä",
    rating: 5,
    message: "–®–≤–∏–¥–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞, —á–µ—Å–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è. –ü—Ä–∏–≤—ñ–¥ –ø—Ä–∏–π—à–æ–≤ –≤—ñ–¥—Ä–µ–≥—É–ª—å–æ–≤–∞–Ω–∏–π.",
    createdAt: "2025-07-20T10:00:00.000Z",
    recommended: true,
    verified: true,
  },
  {
    id: "r2",
    name: "–ú–∞—Ä—ñ—è",
    rating: 5,
    message: "–°–ø–æ–¥–æ–±–∞–≤—Å—è —Å–µ—Ä–≤—ñ—Å —ñ —É–ø–∞–∫–æ–≤–∫–∞. –î–æ–¥–∞—Ç–∫–æ–≤–æ –ø–æ–∫–ª–∞–ª–∏ –Ω–∞–∫–ª–µ–π–∫–∏, –¥—Ä—ñ–±–Ω–∏—Ü—è –∞–ª–µ –ø—Ä–∏—î–º–Ω–æ.",
    createdAt: "2025-08-01T14:10:00.000Z",
    recommended: true,
    verified: true,
  },
  {
    id: "r3",
    name: "–Ü–≥–æ—Ä",
    rating: 4,
    message: "–í—Å–µ –¥–æ–±—Ä–µ, —Ç—ñ–ª—å–∫–∏ –ù–æ–≤–∞–ø–æ—à—Ç–∞ –∑–∞—Ç—Ä–∏–º–∞–ª–∞ –¥–µ–Ω—å. –ú–∞–≥–∞–∑–∏–Ω —Ç—Ä–∏–º–∞–≤ —É –∫—É—Ä—Å—ñ.",
    createdAt: "2025-08-10T09:40:00.000Z",
    recommended: true,
    verified: false,
  },
];

/** ‚Äî‚Äî‚Äî page ‚Äî‚Äî‚Äî */
export default function About() {
  const STORE_KEY = "about_reviews_v1";
  const [reviews, setReviews] = useState([]);
  const [sent, setSent] = useState(false);
  const [shareMsg, setShareMsg] = useState("");

  // load + seed
  useEffect(() => {
    const raw = localStorage.getItem(STORE_KEY);
    if (raw) {
      setReviews(sanitize(JSON.parse(raw)));
    } else {
      localStorage.setItem(STORE_KEY, JSON.stringify(SEED));
      setReviews(SEED);
    }
  }, []);

  // persist
  useEffect(() => {
    if (reviews?.length) localStorage.setItem(STORE_KEY, JSON.stringify(reviews));
  }, [reviews]);

  const avg = useMemo(() => AVG(reviews), [reviews]);
  const total = reviews.length;

  // share
  const onShare = async () => {
    setShareMsg("");
    const url = window.location.origin + "/";
    try {
      if (navigator.share) {
        await navigator.share({
          title: "AIRSOFT ‚Äî —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è —Ç–∞ —Å–µ—Ä–≤—ñ—Å",
          text: "–†–µ–∫–æ–º–µ–Ω–¥—É—é —Ü–µ–π –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —Å—Ç—Ä–∞–π–∫–±–æ–ª—É",
          url,
        });
        setShareMsg("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.");
      } else {
        await navigator.clipboard.writeText(url);
        setShareMsg("–ü–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–µ.");
      }
    } catch {
      setShareMsg("–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å.");
    }
    setTimeout(() => setShareMsg(""), 2500);
  };

  return (
    <main className="mx-auto max-w-7xl px-3 sm:px-6 lg:px-8 py-6 lg:py-12">
      {/* HERO */}
      <section className="relative overflow-hidden rounded-2xl sm:rounded-3xl border border-white/20 bg-gradient-to-br from-slate-900 to-slate-800 p-5 sm:p-8 lg:p-12 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)]">
        <div className="relative z-10 max-w-3xl">
          <h1 className="text-[26px] leading-tight sm:text-4xl lg:text-5xl font-extrabold tracking-tight text-white">
            –ü—Ä–æ –Ω–∞—Å
          </h1>
          <p className="mt-3 text-slate-200 text-[15px] sm:text-base lg:text-lg">
            –ü—Ä–æ—Ñ—ñ –∑—ñ —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –¥–ª—è —Å—Ç—Ä–∞–π–∫–±–æ–ª—É. –¢–µ—Å—Ç—É—î–º–æ, –Ω–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ, –ø–æ—è—Å–Ω—é—î–º–æ –ø—Ä–æ—Å—Ç–∏–º–∏ —Å–ª–æ–≤–∞–º–∏.
          </p>

          {/* buttons */}
          <div className="mt-5 grid grid-cols-1 gap-2.5 sm:auto-rows-min sm:grid-cols-2 md:grid-cols-3 md:gap-3">
            <Link
              to="/"
              className="inline-flex items-center justify-center h-11 px-5 rounded-2xl bg-blue-600 !text-white hover:!text-white active:!text-white focus-visible:!text-white visited:!text-white no-underline font-semibold shadow-sm hover:bg-blue-700 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-600"

            >
              –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
            </Link>
            <Link
              to="/contact"
              className="inline-flex items-center justify-center h-11 px-5 rounded-2xl border border-white/30 !text-white visited:!text-white hover:bg-white/10 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-white/60"


            >
              –ó–≤‚Äô—è–∑–∞—Ç–∏—Å—è
            </Link>
            <button
              type="button"
              onClick={onShare}
              aria-label="–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è"
              className="inline-flex items-center justify-center h-11 px-5 rounded-2xl !bg-white !text-slate-900 font-semibold shadow-sm hover:!bg-slate-100 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-slate-900"
            >
              –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å
            </button>
            {shareMsg && (
              <span className="sm:col-span-2 md:col-span-3 self-center text-sm text-slate-200">
                {shareMsg}
              </span>
            )}
          </div>

          <TrustBar />
        </div>

        <div
          aria-hidden
          className="absolute -right-24 -top-24 h-72 w-72 rounded-full bg-blue-500/20 blur-3xl"
        />
      </section>

      {/* VALUE PROPS */}
      <section className="mt-8 grid gap-4 sm:grid-cols-2 lg:grid-cols-4">
        <VP icon="‚öôÔ∏è" title="–ü–µ—Ä–µ–¥–ø—Ä–æ–¥–∞–∂–Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è">
          –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –±–∞–∑–æ–≤—ñ –≤—É–∑–ª–∏ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é.
        </VP>
        <VP icon="‚ö°" title="–®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞">
          –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–µ–Ω—å —É –¥–µ–Ω—å –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å –¥–æ 15:00.
        </VP>
        <VP icon="üõ°Ô∏è" title="–ì–∞—Ä–∞–Ω—Ç—ñ—è —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞">
          –ü–æ—è—Å–Ω—é—î–º–æ, –∫–æ–Ω—Å—É–ª—å—Ç—É—î–º–æ, –Ω–µ –∑–Ω–∏–∫–∞—î–º–æ –ø—ñ—Å–ª—è –ø–æ–∫—É–ø–∫–∏.
        </VP>
        <VP icon="üí≥" title="–û–ø–ª–∞—Ç–∞ —è–∫ –∑—Ä—É—á–Ω–æ">
          –ö–∞—Ä—Ç–∫–∞, –ø—ñ—Å–ª—è–ø–ª–∞—Ç–∞, –±–µ–∑–≥–æ—Ç—ñ–≤–∫–∞ –¥–ª—è –§–û–ü/–¢–û–í.
        </VP>
      </section>

      {/* STATS + CTA */}
      <section className="mt-8 grid gap-4 sm:gap-6 md:grid-cols-3">
  {/* –†–æ–∫—ñ–≤ –Ω–∞ —Ä–∏–Ω–∫—É */}
  <div className="relative overflow-hidden rounded-2xl border bg-white p-5 group">
    <div className="absolute -top-6 -right-6 h-24 w-24 rounded-full bg-blue-500/10 blur-2xl" aria-hidden />
    <div className="flex flex-col items-center text-center">
      <div className="text-transparent bg-clip-text 
                bg-gradient-to-r from-blue-600 via-indigo-600 to-violet-600
                text-3xl sm:text-4xl font-extrabold tracking-tight drop-shadow">
        7+
      </div>


      <div className="mt-1 text-sm text-black">–†–æ–∫—ñ–≤ –Ω–∞ —Ä–∏–Ω–∫—É</div>
      <div className="mt-3 h-1.5 w-24 rounded-full bg-gray-100 overflow-hidden">
        <div className="h-full w-5/6 rounded-full bg-blue-600 group-hover:w-full transition-[width] duration-500" />
      </div>
    </div>
  </div>

  {/* –¢–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å–∫–ª–∞–¥—ñ */}
  <div className="relative overflow-hidden rounded-2xl border bg-white p-5 group">
    <div className="absolute -bottom-8 -left-8 h-28 w-28 rounded-full bg-violet-500/10 blur-2xl" aria-hidden />
    <div className="flex flex-col items-center text-center">
      <div className="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 via-indigo-600 to-violet-600 
                text-3xl sm:text-4xl font-extrabold tracking-tight drop-shadow">
        3&nbsp;500+
      </div>

      <div className="mt-1 text-sm text-gray-600">–¢–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å–∫–ª–∞–¥—ñ</div>
      <div className="mt-3 inline-flex items-center gap-1.5 rounded-full border px-2 py-1 text-[12px] text-gray-700">
        ‚ö° –®–≤–∏–¥–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞
      </div>
    </div>
  </div>

  {/* –†–µ–π—Ç–∏–Ω–≥ + CTA */}
  <div className="relative overflow-hidden rounded-2xl border p-4 sm:p-5 bg-gradient-to-br from-slate-900 to-slate-800 text-white">
    <div className="absolute -right-10 -top-10 h-32 w-32 rounded-full bg-white/10 blur-3xl" aria-hidden />
    <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
      <div>
        <div className="text-[13px] sm:text-sm text-slate-300">–°–µ—Ä–µ–¥–Ω—è –æ—Ü—ñ–Ω–∫–∞</div>
        <div className="mt-1 flex items-center gap-2">
          <Stars value={avg} size={18} />
          <span className="text-lg font-extrabold tabular-nums">
            {Number.isFinite(avg) ? avg.toFixed(1) : "0.0"}
          </span>
          <span className="text-slate-400 text-[13px] sm:text-sm">({total})</span>
        </div>
      </div>

      <Link
        to="/cart"
        className="group relative inline-flex items-center justify-center h-11 px-5 rounded-2xl font-semibold
                    text-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-white/50"
      >
        {/* glow */}
        <span aria-hidden className="absolute -inset-1 rounded-3xl bg-gradient-to-r from-blue-600 via-indigo-600 to-violet-600 blur-lg opacity-60 group-hover:opacity-80 transition" />
        {/* fill */}
        <span aria-hidden className="absolute inset-0 rounded-2xl bg-gradient-to-r from-blue-600 via-indigo-600 to-violet-600 shadow-[0_10px_30px_rgba(0,0,0,0.25)]" />
        {/* shine */}
        <span aria-hidden className="pointer-events-none absolute -left-10 top-0 h-full w-10 rotate-12 bg-white/25 opacity-0 group-hover:opacity-100 group-hover:translate-x-[140%] transition-transform duration-700 ease-out" />
        <span className="relative z-10 text-white">–î–æ –ø–æ–∫—É–ø–æ–∫</span>
      </Link>
    </div>
  </div>
</section>


      {/* GALLERY
      <section className="mt-10 grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
        <Shot title="–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é" />
        <Shot title="–ö–æ–º–∞–Ω–¥–∞ —ñ —Å–µ—Ä–≤—ñ—Å" />
        <Shot title="–†–µ–∞–ª—å–Ω—ñ –∫–æ–º–ø–ª–µ–∫—Ç–∏" />
      </section> */}

      {/* REVIEWS */}
      <ReviewsBlock reviews={reviews} setReviews={setReviews} setSent={setSent} sent={sent} />

      {/* FAQ */}
      <section className="mt-10 rounded-2xl border bg-white p-6 shadow-lg">
        <h2 className="text-2xl font-extrabold text-gray-900 mb-6 text-center">
          –ü–∏—Ç–∞–Ω–Ω—è —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        </h2>
        <div className="divide-y divide-gray-200">
          <Faq
            q="–Ø–∫ —à–≤–∏–¥–∫–æ –≤–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç–µ?"
            a="–ó–∞–∑–≤–∏—á–∞–π —Ç–æ–≥–æ –∂ –¥–Ω—è –¥–æ 15:00. –î–∞–ª—ñ ‚Äî –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä–æ–±–æ—á–∏–π –¥–µ–Ω—å."
          />
          <Faq
            q="–©–æ –∑ –≥–∞—Ä–∞–Ω—Ç—ñ—î—é?"
            a="–û–±–º—ñ–Ω/–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è 14 –¥–Ω—ñ–≤, —Å–µ—Ä–≤—ñ—Å –≤—ñ–¥ –±—Ä–µ–Ω–¥—É –∞–±–æ –Ω–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫–∏–π —Å–µ—Ä–≤—ñ—Å–Ω–∏–π —Ü–µ–Ω—Ç—Ä."
          />
          <Faq
            q="–ß–∏ –¥–æ–ø–æ–º–æ–∂–µ—Ç–µ –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏?"
            a="–¢–∞–∫. –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º —É Telegram –∞–±–æ –∑–∞–ª–∏—à—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –ö–æ–Ω—Ç–∞–∫—Ç–∏."
          />
        </div>
      </section>


      {/* JSON-LD */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify({
            "@context": "https://schema.org",
            "@type": "Store",
            name: "AIRSOFT",
            url: typeof window !== "undefined" ? window.location.origin : "https://example.com",
            aggregateRating: {
              "@type": "AggregateRating",
              ratingValue: Number.isFinite(avg) ? avg.toFixed(1) : "5.0",
              reviewCount: String(total || 1),
            },
          }),
        }}
      />
    </main>
  );
}

/** ‚Äî‚Äî‚Äî subcomponents ‚Äî‚Äî‚Äî */

function TrustBar() {
  return (
    <div className="mt-6 grid grid-cols-1 sm:grid-cols-2 gap-3">
      <Badge icon="‚Ü©Ô∏è" text="14 –¥–Ω—ñ–≤ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è" />
      <Badge icon="‚úÖ" text="–°–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –±—Ä–µ–Ω–¥–∏" />
      <Badge icon="üí¨" text="–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –∑ 10:00 –¥–æ 19:00" />
      <Badge icon="üîí" text="–ë–µ–∑–ø–µ—á–Ω–∞ –æ–ø–ª–∞—Ç–∞" />
    </div>
  );
}

function Badge({ text, icon }) {
  return (
    <div className="flex items-center gap-3 rounded-xl border border-white/20 bg-gradient-to-r from-slate-800 to-slate-900/90 px-4 py-3 
                    shadow-[inset_0_1px_0_rgba(255,255,255,0.08)] hover:shadow-lg hover:scale-[1.02] transition">
      <div className="flex h-9 w-9 items-center justify-center rounded-lg bg-gradient-to-r from-blue-600 to-indigo-600 text-white text-lg shadow">
        {icon}
      </div>
      <span className="text-[15px] sm:text-base font-medium text-slate-100">{text}</span>
    </div>
  );
}


function VP({ icon, title, children }) {
  return (
    <div className="h-full rounded-2xl border bg-white p-4 sm:p-5">
      <div className="flex h-full items-start gap-3">
        <div className="grid h-8 w-8 sm:h-10 sm:w-10 place-items-center rounded-xl bg-blue-50 text-base sm:text-xl">
          {icon}
        </div>
        <div className="min-w-0">
          <div className="font-semibold text-[15px] sm:text-base">{title}</div>
          <p className="mt-1 text-gray-700 text-[13px] sm:text-sm">{children}</p>
        </div>
      </div>
    </div>
  );
}

function Stat({ label, value }) {
  return (
    <div className="rounded-2xl border bg-white p-4 sm:p-5 text-center">
      <div className="text-xl sm:text-3xl font-extrabold">{value}</div>
      <div className="text-xs sm:text-sm text-gray-600">{label}</div>
    </div>
  );
}

function Shot({ title }) {
  return (
    <figure className="relative overflow-hidden rounded-2xl border bg-white">
      <div className="aspect-[16/9] bg-gradient-to-br from-slate-100 to-slate-200" />
      <figcaption className="absolute left-2 bottom-2 rounded-lg bg-black/60 px-2.5 py-1 text-white text-xs sm:text-sm">
        {title}
      </figcaption>
    </figure>
  );
}

/** ‚Äî‚Äî‚Äî Reviews ‚Äî‚Äî‚Äî */
function ReviewsBlock({ reviews, setReviews, sent, setSent }) {
  const [sort, setSort] = useState("new");

  const sorted = useMemo(() => {
    const copy = [...reviews];
    if (sort === "new") return copy.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
    if (sort === "top") return copy.sort((a, b) => b.rating - a.rating || new Date(b.createdAt) - new Date(a.createdAt));
    return copy;
  }, [reviews, sort]);

  return (
    <section className="mt-10 grid gap-5 lg:grid-cols-3">
      {/* LIST */}
      <div className="lg:col-span-2 rounded-2xl border bg-white p-3 sm:p-6 overflow-hidden">
        {/* header: –Ω–µ –ª–∞–º–∞—î—Ç—å—Å—è –Ω–∞ 320px */}
        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2">
          <h2 className="text-lg sm:text-xl font-bold">–í—ñ–¥–≥—É–∫–∏</h2>
          <div className="w-full sm:w-auto">
            <label htmlFor="sort" className="sr-only">–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è</label>
            <select
              id="sort"
              aria-label="–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è"
              value={sort}
              onChange={(e) => setSort(e.target.value)}
              className="w-full h-9 rounded-xl border px-3 text-sm"
            >
              <option value="new">–°–ø–æ—á–∞—Ç–∫—É –Ω–æ–≤—ñ</option>
              <option value="top">–°–ø–æ—á–∞—Ç–∫—É –∑ –≤–∏—â–æ—é –æ—Ü—ñ–Ω–∫–æ—é</option>
            </select>
          </div>
        </div>

        <div className="mt-3 sm:mt-4 divide-y">
          {sorted.map((r) => (
            <ReviewItem key={r.id} r={r} />
          ))}
          {!sorted.length && <div className="py-6 text-gray-600">–©–µ –Ω–µ–º–∞—î –≤—ñ–¥–≥—É–∫—ñ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä—à–∏–º(–æ—é).</div>}
        </div>
      </div>

      {/* FORM */}
      <div className="rounded-2xl border bg-white p-4 sm:p-6 lg:sticky lg:top-6 h-fit">
        <h3 className="text-lg font-bold">–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫</h3>
        <ReviewForm
          onSubmit={(rev) => {
            setReviews((prev) => [{ ...rev, id: crypto.randomUUID(), createdAt: new Date().toISOString() }, ...prev]);
            setSent(true);
            setTimeout(() => setSent(false), 2500);
          }}
        />
        {sent && (
          <div className="mt-3 rounded-2xl border border-green-200 bg-green-50 p-3 text-green-800 text-sm">
            –î—è–∫—É—î–º–æ –∑–∞ –≤—ñ–¥–≥—É–∫.
          </div>
        )}
      </div>
    </section>
  );
}


function ReviewItem({ r }) {
  return (
    <article className="py-3 sm:py-4 flex gap-3">
      <div className="h-7 w-7 sm:h-10 sm:w-10 shrink-0 rounded-full bg-gradient-to-br from-blue-500 to-indigo-500 text-white grid place-items-center text-xs sm:text-base font-bold">
        {r.name?.slice(0, 1)?.toUpperCase() || "?"}
      </div>
      <div className="min-w-0">
        <div className="flex flex-wrap items-center gap-2 min-w-0">
          <div className="font-semibold text-[15px] truncate max-w-[40%] sm:max-w-none">{r.name || "–ê–Ω–æ–Ω—ñ–º"}</div>
          <Stars value={r.rating} size={16} />
          <time className="text-[11px] sm:text-xs text-gray-500">{fmtDate(r.createdAt)}</time>
          {r.verified && (
            <span className="ml-1 rounded bg-emerald-50 px-2 py-0.5 text-[11px] text-emerald-700">
              –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∞
            </span>
          )}
        </div>
        <p className="mt-1 text-gray-800 break-words break-all whitespace-pre-line text-[15px] sm:text-base">
          {r.message}
        </p>
        {r.recommended && (
          <div className="mt-1 text-[13px] sm:text-sm text-emerald-700">–†–µ–∫–æ–º–µ–Ω–¥—É—é –¥—Ä—É–∑—è–º ‚úÖ</div>
        )}
      </div>
    </article>
  );
}



function Stars({ value = 0, size = 18 }) {
  const full = Math.round(clamp(value, 0, 5));
  return (
    <div className="inline-flex align-middle" aria-label={`–û—Ü—ñ–Ω–∫–∞ ${full} –∑ 5`}>
      {Array.from({ length: 5 }).map((_, i) => (
        <svg key={i} width={size} height={size} viewBox="0 0 20 20" className={i === 4 ? "" : "mr-0.5"} aria-hidden>
          <path d="M10 1.5l2.7 5.46 6.03.88-4.36 4.25 1.03 6.01L10 15.9l-5.37 2.2 1.03-6.01L1.3 7.84l6.03-.88L10 1.5z" fill={i < full ? "#f59e0b" : "#e5e7eb"} />
        </svg>
      ))}
    </div>
  );
}

/** ‚Äî‚Äî‚Äî Review form ‚Äî‚Äî‚Äî */
function ReviewForm({ onSubmit }) {
  const base = useId();
  const nameId = `name-${base}`;
  const msgId = `msg-${base}`;
  const agreeId = `agree-${base}`;
  const recId = `rec-${base}`;

  const [name, setName] = useState("");
  const [rating, setRating] = useState(5);
  const [hover, setHover] = useState(0);
  const [message, setMessage] = useState("");
  const [recommended, setRecommended] = useState(true);
  const [agree, setAgree] = useState(true);
  const [err, setErr] = useState("");

  const submit = (e) => {
    e.preventDefault();
    setErr("");
    if (!agree) return setErr("–ü–æ—Ç—Ä—ñ–±–Ω–∞ –∑–≥–æ–¥–∞ –Ω–∞ –æ–±—Ä–æ–±–∫—É –¥–∞–Ω–∏—Ö.");
    if (!message.trim() || message.trim().length < 10) return setErr("–ú—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤ –≤—ñ–¥–≥—É–∫—É.");
    onSubmit?.({
      name: name?.trim() || "–ê–Ω–æ–Ω—ñ–º",
      rating: clamp(Number(rating) || 5, 1, 5),
      message: message.trim(),
      recommended,
      verified: false,
    });
    setName(""); setRating(5); setHover(0); setMessage(""); setRecommended(true); setAgree(true);
  };

  const active = hover || rating;

  return (
    <form onSubmit={submit} className="mt-3 space-y-4" autoComplete="on">
      {/* Name */}
      <div>
        <label htmlFor={nameId} className="block text-sm text-gray-800 mb-1.5">–Ü–º‚Äô—è</label>
        <input
          id={nameId}
          name="name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          placeholder="–Ø–∫ –≤–∞—Å –∑–≤–∞—Ç–∏ ?"
          className="w-full text-black rounded-2xl border border-gray-300/70 bg-white/80 backdrop-blur-[1px] px-3 py-2 text-[15px] placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-600 shadow-[0_1px_0_rgba(16,24,40,.04)]"
          autoComplete="name"
        />
      </div>

      {/* Rating */}
      <fieldset>
        <legend className="block text-sm text-gray-800 mb-1.5">–û—Ü—ñ–Ω–∫–∞</legend>
        <div role="radiogroup" aria-label="–û—Ü—ñ–Ω–∫–∞" className="flex items-center gap-1.5">
          {[1, 2, 3, 4, 5].map((v) => {
            const id = `rate-${v}-${base}`;
            return (
              <label key={v} htmlFor={id} className="cursor-pointer">
                <input
                  id={id}
                  type="radio"
                  name="rating"
                  value={v}
                  checked={Number(rating) === v}
                  onChange={() => setRating(v)}
                  className="sr-only"
                />
                <svg
                  width="24" height="24" viewBox="0 0 20 20" aria-hidden
                  onMouseEnter={() => setHover(v)} onMouseLeave={() => setHover(0)}
                  className="transition-colors"
                >
                  <path
                    d="M10 1.5l2.7 5.46 6.03.88-4.36 4.25 1.03 6.01L10 15.9l-5.37 2.2 1.03-6.01L1.3 7.84l6.03-.88L10 1.5z"
                    fill={v <= active ? "#f59e0b" : "#e5e7eb"}
                  />
                </svg>
              </label>
            );
          })}
        </div>
        <p className="mt-1 text-xs text-gray-500">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∑—ñ—Ä–∫—É, —â–æ–± –≤–∏–±—Ä–∞—Ç–∏ 1‚Äì5.</p>
      </fieldset>

      {/* Message */}
      <div>
        <label htmlFor={msgId} className="block text-sm text-gray-800 mb-1.5">–í—ñ–¥–≥—É–∫</label>
        <textarea
          id={msgId}
          name="message"
          rows={4}
          value={message}
          onChange={(e) => setMessage(e.target.value)}
          placeholder="–©–æ —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—å –∞–±–æ —â–æ –ø–æ–∫—Ä–∞—â–∏—Ç–∏?"
          className="w-full text-black rounded-2xl border border-gray-300/70 bg-white/80 backdrop-blur-[1px] px-3 py-2 text-[15px] placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-600 resize-y shadow-[0_1px_0_rgba(16,24,40,.04)]"
        />
        <p className="mt-1 text-xs text-gray-600">–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–∞ –∫—Ä–∏—Ç–∏–∫–∞ –≤—ñ—Ç–∞—î—Ç—å—Å—è.</p>
      </div>

      {/* Toggles */}
      <label htmlFor={recId} className="flex items-center gap-2 text-[15px] cursor-pointer">
        <input
          id={recId}
          name="recommended"
          type="checkbox"
          checked={recommended}
          onChange={(e) => setRecommended(e.target.checked)}
          className="h-5 w-5 rounded accent-blue-600"
        />
        <span className="text-gray-800">–†–µ–∫–æ–º–µ–Ω–¥—É—é –¥—Ä—É–∑—è–º</span>
      </label>

      <label htmlFor={agreeId} className="flex items-start gap-2 text-[15px] cursor-pointer">
        <input
          id={agreeId}
          name="agree"
          type="checkbox"
          checked={agree}
          onChange={(e) => setAgree(e.target.checked)}
          className="mt-0.5 h-5 w-5 rounded accent-blue-600"
        />
        <span className={agree ? "text-gray-800" : "text-red-700"}>
          –ü–æ–≥–æ–¥–∂—É—é—Å—å –Ω–∞ –æ–±—Ä–æ–±–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö.
        </span>
      </label>

      {/* Error */}
      {err && (
        <div className="rounded-2xl border border-red-200 bg-red-50 p-2 text-sm text-red-800">
          {err}
        </div>
      )}

      {/* Submit */}
      <div className="pt-1">
        <button
          type="submit"
          className="w-full inline-flex items-center justify-center h-12 rounded-2xl !bg-blue-600 hover:!bg-blue-700 !text-white font-semibold shadow-lg shadow-blue-600/20 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-700"
        >
          –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫
        </button>
      </div>
    </form>
  );
}



/** ‚Äî‚Äî‚Äî utils ‚Äî‚Äî‚Äî */
function sanitize(list) {
  return (Array.isArray(list) ? list : [])
    .map((r, i) => ({
      id: r.id || `r-${i}`,
      name: String(r.name || "–ê–Ω–æ–Ω—ñ–º").slice(0, 40).trim(),
      rating: clamp(Number(r.rating) || 5, 1, 5),
      message: String(r.message || "").slice(0, 800).trim(),
      createdAt: r.createdAt || new Date().toISOString(),
      recommended: !!r.recommended,
      verified: !!r.verified,
    }))
    .slice(0, 500);
}

<section className="mt-10 rounded-2xl border bg-white p-6 shadow-lg">
  <h2 className="text-2xl font-extrabold text-gray-900 mb-6 text-center">
    –ü–∏—Ç–∞–Ω–Ω—è —ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  </h2>
  <div className="divide-y divide-gray-200">
    <Faq q="–Ø–∫ —à–≤–∏–¥–∫–æ –≤–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç–µ?" a="–ó–∞–∑–≤–∏—á–∞–π —Ç–æ–≥–æ –∂ –¥–Ω—è –¥–æ 15:00. –î–∞–ª—ñ ‚Äî –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä–æ–±–æ—á–∏–π –¥–µ–Ω—å." />
    <Faq q="–©–æ –∑ –≥–∞—Ä–∞–Ω—Ç—ñ—î—é?" a="–û–±–º—ñ–Ω/–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è 14 –¥–Ω—ñ–≤, —Å–µ—Ä–≤—ñ—Å –≤—ñ–¥ –±—Ä–µ–Ω–¥—É –∞–±–æ –Ω–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫–∏–π —Å–µ—Ä–≤—ñ—Å–Ω–∏–π —Ü–µ–Ω—Ç—Ä." />
    <Faq q="–ß–∏ –¥–æ–ø–æ–º–æ–∂–µ—Ç–µ –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏?" a="–¢–∞–∫. –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º —É Telegram –∞–±–æ –∑–∞–ª–∏—à—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –ö–æ–Ω—Ç–∞–∫—Ç–∏." />
  </div>
</section>

